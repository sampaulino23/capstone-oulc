<div id = "feedback-history">
    {{#compare user_role '!=' 'Requester'}}
    <div class = "feedback-header">
        Feedback Input:
    </div>
    <div class="container comments-container">
        {{#each latestversioncontracts}}
        <div class="pending-feedback" id="cvId{{_id}}">
            <p>{{filename}}</p>
            <div class="form-floating">
                <textarea class="form-control pending-feedback-textarea" placeholder="Leave a comment here" style="height: 100px"></textarea>
            </div>
        </div>
        {{/each}}
        <p class="changes-saved" style="visibility: hidden;">Saving changes... </p>
    </div>
    {{/compare}}
    {{#compare user_role '==' 'Requester'}}
    <div class = "feedback-header">
        Current Feedback:
    </div>
    <div id="currentFeedbacksContainer">
        {{#each feedbacks}}
        {{#compare status '==' 'Submitted'}}
            {{#compare content '!=' ''}}
            <div id = "feedbackContainer" class = "current-feedback feedback-container">
                <input type="hidden" id="currentFeedbackId" name="currentFeedbackId" value="{{_id}}"/>
                <div id ="feedback-details-div">
                    <div class = "profile-pic">
                        <div id = "pic-inner{{@index}}" class = "pic-inner"></div>
                    </div>
                    <div id = "author-date-div">
                        <div class = "feedback-author" id = "feedback-author{{@index}}">
                            {{user_id.fullName}}
                        </div>
                        <div class = "feedback-date">
                            {{formatfeedbackdate submitDate}}
                        </div>
                    </div>
                </div>
                <p class = "content"><b>Filename: </b>{{contractVersion.filename}}</p>
                <div class = "content">
                <div>{{content}}</div>
                </div>
            </div>
            {{/compare}}
        {{/compare}}
        {{/each}}
    </div>
    {{/compare}}
    <div class = "feedback-header">
        Feedback History:
    </div>
    <div id="feedbackHistoryContainer">
        {{#each revisedfeedbacks}}
        {{#compare status '==' 'Revised'}}
            {{#compare content '!=' ''}}
            <div id = "{{_id}}" class = "feedback-container feedback-card">
                <div id ="feedback-details-div">
                    <div class = "profile-pic">
                        <div id = "prevPic-inner{{@index}}" class = "pic-inner"></div>
                    </div>
                    <div id = "author-date-div">
                        <div class = "feedback-author previousFeedbackAuthor{{@index}}">{{user_id.fullName}}</div>
                        <div class = "feedback-date">{{formatfeedbackdate submitDate}}</div>
                    </div>
                </div>
                <p class = "content"><b>Filename: </b>{{contractVersion.filename}}</p>
                <div class = "content">
                <div>{{content}}</div>
                </div>
            </div>
            {{/compare}}
        {{/compare}}
        {{/each}}
    </div>
</div>

<script>
/*
    var currFeedbackCount = $('.current-feedback').length;
    var feedbackHistoryCount = $('.feedback-card').length;
    
    console.log(currFeedbackCount, feedbackHistoryCount);    

    for (var i = 0; i < feedbackHistoryCount; i++) {
        console.log(i);

        var feedbackrow = $('.feedback-card:eq(' + i + ' )');

        var feedbackAuthor = feedbackrow.find('.feedback-author').html();

        if (!feedbackAuthor) {
            feedbackAuthor = "Testing Name";
        } else {
            feedbackAuthor = feedbackAuthor.trim();
        }

        console.log(feedbackAuthor);

        var matches = feedbackAuthor.match(/\b(\w)/g); // e.g. ['J','S','O','N']
        var acronym = matches.join(''); // output will be JSON
    
        feedbackrow.find('.pic-inner').text(acronym);
    }

    //var currentFeedback = document.getElementById("currentFeedbacksContainer").getElementsByClassName("pic-inner");
    //var revisedFeedbacks = document.getElementById("feedbackHistoryContainer").getElementsByClassName("pic-inner");
    /*let filteredFeedback = [];
    if (feedback.style.display != "none") {
        filteredFeedback.push(feedback);
    }

    currentFeedbackCount = currentFeedback.length;
    revisedFeedbacksCount = revisedFeedbacks.length;

    for (i = 0; i < currentFeedbackCount; i++) {
        var feedbackAuthorID = "#feedback-author" + i;
        var elementid = "pic-inner" + i;

        var feedbackAuthor = $(feedbackAuthorID).text();

        console.log(feedbackAuthor);

        if (feedbackAuthor === null) {
            feedbackAuthor = "Testing Name";
        }
        var matches = feedbackAuthor.match(/\b(\w)/g); // e.g. ['J','S','O','N']
        var acronym = matches.join(''); // output will be JSON
    
        document.getElementById(elementid).innerHTML = acronym;
    }

    for (i = 0; i < revisedFeedbacksCount; i++) {
        var previousfeedbackAuthorID = "#previousFeedback-author" + i;
        var elementid = "pic-inner" + i;

        var previousfeedbackAuthorID = $(feedbackAuthorID).text();
        if (previousfeedbackAuthorID === null) {
            previousfeedbackAuthorID = "Testing Name";
        }
        var matches = previousfeedbackAuthorID.match(/\b(\w)/g); // e.g. ['J','S','O','N']
        var acronym = matches.join(''); // output will be JSON
    
        document.getElementById(elementid).innerHTML = acronym;
    }
    */
    const nodeList= document.querySelectorAll(".pic-inner");
    const nodeList2 = document.querySelectorAll(".feedback-author");
    // console.log("nodelist 1" + nodeList.length);
    // console.log("nodelist 2" + nodeList2.length);

    for (i = 0; i < nodeList.length; i++) {
       nodeList[i].innerHTML = getAcronym(nodeList2[i].innerHTML);
    }


    function getAcronym(username) {
        var matches = username.match(/\b(\w)/g); // e.g. ['J','S','O','N']
        var acronym = matches.join('');
        return acronym;
    }

    $('.pending-feedback-textarea').keyup(() => {
        $('.changes-saved').css("visibility", "visible");

        setTimeout(function(){
            $('.changes-saved').css("visibility", "hidden");
        }, 5000);
    })
</script>